callAPI(stations, latitudes, longitudes, dates1)
debug(callAPI)
callAPI(stations, latitudes, longitudes, dates1)
View(weather)
callAPI(stations, latitudes, longitudes, dates1)
View(addName)
View(weather)
names(addName)
names(addWeather)
names(Weather)
names(weather)
callAPI <- function(stations, lats, lons, dates) {
# create empty frame
weather <- data.frame()
for (i in 1:length(stations)) {
for (j in 1:length(dates)) {
# for each location (i), get the weather for each date (j),
names <- rep(stations[i], 24) # replicate the location name so we have 1/hour for the date(j)
hourly <- get_forecast_for(lats[i], lons[i], dates[j], add_headers=TRUE)$hourly
addName <- cbind(names,hourly)
weather <- union_all(weather,addName)
rm(names, hourly, addName)
} # end location for
} # end date for
return(weather)
} # end function
callAPI <- function(stations, lats, lons, dates) {
# create empty frame
weather <- data.frame()
for (i in 1:length(stations)) {
for (j in 1:length(dates)) {
# for each location (i), get the weather for each date (j),
names <- rep(stations[i], 24) # replicate the location name so we have 1/hour for the date(j)
hourly <- get_forecast_for(lats[i], lons[i], dates[j], add_headers=TRUE)$hourly
addName <- cbind(names,hourly)
weather <- union_all(weather,addName)
rm(names, hourly, addName)
} # end location for
} # end date for
return(weather)
} # end function
debug(callAPI)
callAPI(stations, latitudes, longitudes, dates1)
View(weather)
# how many API calls?
print(sprintf("You have used %s API calls.", test$`x-forecast-api-calls`))
source("callAPI.R")
setwd("~/Documents/_SCHOOL/_Drexel/STAT 642 - Data Mining/Assignments/Project")
setwd("~/Documents/_SCHOOL/_Drexel/STAT 642 - Data Mining/Assignments/Project")
source("callAPI.R")
weather <- callAPI(stations, latitudes, longitudes, dates1)
View(weather)
library(xlsx)
weather <- union_all(weather1, weather2)
write.xlsx2(weather, "weather data.xlsx", col.names = T, row.names = T)
summary(weather)
weather$names <- factor(weather$names)
summary(weather)
weather$names <- factor(weather$names)
weather$time <- factor(weather$time)
weather$summary <- factor(weather$summary)
weather$icon <- factor(weather$icon)
weather$precipType <- factor(weather$precipType)
summary(weather)
weather1 <- weather
# this will make lots of API calls.  If you call > 1,000 per day, it costs money!
# one call is one station per day
# weather1 <- callAPI(stations, latitudes, longitudes, dates1)
weather2 <- callAPI(stations, latitudes, longitudes, dates2)
dates3 <- dates[101:229]
dates <- c(16883:17111) %>%  # create vector from 16883 to 17111
as_date() %>%             # convert to date
as.character() %>%        # convert to string
paste0("T12:00:00-0400")
dates1 <- dates[1:7]
dates2 <- dates[8:100]
dates3 <- dates[101:229]
# this will make lots of API calls.  If you call > 1,000 per day, it costs money!
# one call is one station per day
# weather1 <- callAPI(stations, latitudes, longitudes, dates1)
weather2 <- callAPI(stations, latitudes, longitudes, dates2)
weather3 <- callAPI(stations, latitudes, longitudes, dates3)
# for each location (i), get the weather for each date (j),
station <- rep(stations[i], 24) # replicate the location name so we have 1/hour for the date(j)
i=2
# for each location (i), get the weather for each date (j),
station <- rep(stations[i], 24) # replicate the location name so we have 1/hour for the date(j)
dates=dates2
lats=latitudes
lons=longitudes
j=8
hourly <- get_forecast_for(lats[i], lons[i], dates[j], add_headers=TRUE)$hourly
hourly[1:24,]
hourly[,1:24]
i=1
hourly <- get_forecast_for(lats[i], lons[i], dates[j], add_headers=TRUE)$hourly
j=j+1
hourly <- get_forecast_for(lats[i], lons[i], dates[j], add_headers=TRUE)$hourly
i=2
hourly <- get_forecast_for(lats[i], lons[i], dates[j], add_headers=TRUE)$hourly
j=j+1
i=1
hourly <- get_forecast_for(lats[i], lons[i], dates[j], add_headers=TRUE)$hourly
j=j+1
hourly <- get_forecast_for(lats[i], lons[i], dates[j], add_headers=TRUE)$hourly
j=j+1
hourly <- get_forecast_for(lats[i], lons[i], dates[j], add_headers=TRUE)$hourly
j=j+1
hourly <- get_forecast_for(lats[i], lons[i], dates[j], add_headers=TRUE)$hourly
j=j+1
hourly <- get_forecast_for(lats[i], lons[i], dates[j], add_headers=TRUE)$hourly
j=j+1
hourly <- get_forecast_for(lats[i], lons[i], dates[j], add_headers=TRUE)$hourly
j=j+1
hourly <- get_forecast_for(lats[i], lons[i], dates[j], add_headers=TRUE)$hourly
j=j+1
hourly <- get_forecast_for(lats[i], lons[i], dates[j], add_headers=TRUE)$hourly
j=j+1
hourly <- get_forecast_for(lats[i], lons[i], dates[j], add_headers=TRUE)$hourly
j=j+1
hourly <- get_forecast_for(lats[i], lons[i], dates[j], add_headers=TRUE)$hourly
j=j+1
hourly <- get_forecast_for(lats[i], lons[i], dates[j], add_headers=TRUE)$hourly
j=j+1
hourly <- get_forecast_for(lats[i], lons[i], dates[j], add_headers=TRUE)$hourly
j=j+1
hourly <- get_forecast_for(lats[i], lons[i], dates[j], add_headers=TRUE)$hourly
j=j+1
hourly <- get_forecast_for(lats[i], lons[i], dates[j], add_headers=TRUE)$hourly
j=j+1
hourly <- get_forecast_for(lats[i], lons[i], dates[j], add_headers=TRUE)$hourly
j=j+1
hourly <- get_forecast_for(lats[i], lons[i], dates[j], add_headers=TRUE)$hourly
j=24
hourly <- get_forecast_for(lats[i], lons[i], dates[j], add_headers=TRUE)$hourly
j=j+1
hourly <- get_forecast_for(lats[i], lons[i], dates[j], add_headers=TRUE)$hourly
j=j+1
hourly <- get_forecast_for(lats[i], lons[i], dates[j], add_headers=TRUE)$hourly
j=j+1
hourly <- get_forecast_for(lats[i], lons[i], dates[j], add_headers=TRUE)$hourly
j=j+1
hourly <- get_forecast_for(lats[i], lons[i], dates[j], add_headers=TRUE)$hourly
j=j+1
hourly <- get_forecast_for(lats[i], lons[i], dates[j], add_headers=TRUE)$hourly
j=j+1
hourly <- get_forecast_for(lats[i], lons[i], dates[j], add_headers=TRUE)$hourly
j=j+1
hourly <- get_forecast_for(lats[i], lons[i], dates[j], add_headers=TRUE)$hourly
j=j+1
hourly <- get_forecast_for(lats[i], lons[i], dates[j], add_headers=TRUE)$hourly
j=j+1
hourly <- get_forecast_for(lats[i], lons[i], dates[j], add_headers=TRUE)$hourly
j=j+1
hourly <- get_forecast_for(lats[i], lons[i], dates[j], add_headers=TRUE)$hourly
j=j+1
hourly <- get_forecast_for(lats[i], lons[i], dates[j], add_headers=TRUE)$hourly
j=j+1
hourly <- get_forecast_for(lats[i], lons[i], dates[j], add_headers=TRUE)$hourly
j=j+1
hourly <- get_forecast_for(lats[i], lons[i], dates[j], add_headers=TRUE)$hourly
j=j+1
hourly <- get_forecast_for(lats[i], lons[i], dates[j], add_headers=TRUE)$hourly
j=j+1
hourly <- get_forecast_for(lats[i], lons[i], dates[j], add_headers=TRUE)$hourly
j=j+1
hourly <- get_forecast_for(lats[i], lons[i], dates[j], add_headers=TRUE)$hourly
j=j+1
hourly <- get_forecast_for(lats[i], lons[i], dates[j], add_headers=TRUE)$hourly
j=j+1
hourly <- get_forecast_for(lats[i], lons[i], dates[j], add_headers=TRUE)$hourly
j=j+1
hourly <- get_forecast_for(lats[i], lons[i], dates[j], add_headers=TRUE)$hourly
j=j+1
hourly <- get_forecast_for(lats[i], lons[i], dates[j], add_headers=TRUE)$hourly
j=j+1
hourly <- get_forecast_for(lats[i], lons[i], dates[j], add_headers=TRUE)$hourly
j=j+1
hourly <- get_forecast_for(lats[i], lons[i], dates[j], add_headers=TRUE)$hourly
j=j+1
hourly <- get_forecast_for(lats[i], lons[i], dates[j], add_headers=TRUE)$hourly
j=j+1
hourly <- get_forecast_for(lats[i], lons[i], dates[j], add_headers=TRUE)$hourly
j=j+1
hourly <- get_forecast_for(lats[i], lons[i], dates[j], add_headers=TRUE)$hourly
j=j+1
hourly <- get_forecast_for(lats[i], lons[i], dates[j], add_headers=TRUE)$hourly
j=j+1
hourly <- get_forecast_for(lats[i], lons[i], dates[j], add_headers=TRUE)$hourly
j=j+1
hourly <- get_forecast_for(lats[i], lons[i], dates[j], add_headers=TRUE)$hourly
j=j+1
hourly <- get_forecast_for(lats[i], lons[i], dates[j], add_headers=TRUE)$hourly
j=j+1
hourly <- get_forecast_for(lats[i], lons[i], dates[j], add_headers=TRUE)$hourly
j=j+1
hourly <- get_forecast_for(lats[i], lons[i], dates[j], add_headers=TRUE)$hourly
j=j+1
hourly <- get_forecast_for(lats[i], lons[i], dates[j], add_headers=TRUE)$hourly
j=j+1
hourly <- get_forecast_for(lats[i], lons[i], dates[j], add_headers=TRUE)$hourly
j=j+1
hourly <- get_forecast_for(lats[i], lons[i], dates[j], add_headers=TRUE)$hourly
j=j+1
dim(hourly)
dim(hourly[1])
dim(hourly[1,])
dim(hourly[,1])
dim(hourly[0])
dim(hourly[0,])
nrow(hourly)
# weather1 <- callAPI(stations, latitudes, longitudes, dates1)
weather2 <- callAPI(stations, latitudes, longitudes, dates2)
# weather1 <- callAPI(stations, latitudes, longitudes, dates1)
# weather2 <- callAPI(stations, latitudes, longitudes, dates2)
weather3 <- callAPI(stations, latitudes, longitudes, dates3)
# source: Kaggle: https://www.kaggle.com/septa/on-time-performance
otp <- read.csv(paste(location,"otp.csv", sep="/"))
library(tidyverse)
setwd("~/Documents/_SCHOOL/_Drexel/STAT 642 - Data Mining/Assignments/Project")
location <- "/Users/mithras/Documents/_SCHOOL/_Drexel/STAT 642 - Data Mining/Assignments/Project/Data"
# source: Kaggle: https://www.kaggle.com/septa/on-time-performance
otp <- read.csv(paste(location,"otp.csv", sep="/"))
head(otp)
# SEPTA - On Time Performance Data. 2016-03-23 to 2016-11-06
summary(otp)
levels(otp$status)
table(levels(otp$status))
prop.table(levels(otp$status))
prop.table(otp$status)
summary(otp$status)
location <- "/Users/mithras/Documents/_SCHOOL/_Drexel/
STAT 642 - Data Mining/Assignments/Will-I-Be-Late-/Data"
location
location <- "~/Documents/_SCHOOL/_Drexel/STAT 642 - Data Mining/Assignments/Will-I-Be-Late-/Data"
location
debug(callAPI)
# weather1 <- callAPI(stations, latitudes, longitudes, dates1)
# weather2 <- callAPI(stations, latitudes, longitudes, dates2)
weather3 <- callAPI(stations, latitudes, longitudes, dates3)
View(weather)
View(weather)
dates3 <- dates[101:125]
dates4 <- dates[126:150]
dates5 <- dates[151:175]
dates6 <- dates[176:200]
dates7 <- dates[201:229]
dates1 <- dates[1:7]
dates2 <- dates[8:50]
dates3 <- dates[51:75]
dates4 <- dates[76:100]
dates5 <- dates[101:125]
dates6 <- dates[126:150]
dates7 <- dates[151:175]
dates8 <- dates[176:200]
dates9 <- dates[201:229]
dates <- c(16883:17111) %>%  # create vector from 16883 to 17111
as_date() %>%             # convert to date
as.character() %>%        # convert to string
paste0("T12:00:00-0400")
dates1 <- dates[1:7]
dates2 <- dates[8:50]
dates3 <- dates[51:75]
dates4 <- dates[76:100]
dates5 <- dates[101:125]
dates6 <- dates[126:150]
dates7 <- dates[151:175]
dates8 <- dates[176:200]
dates9 <- dates[201:229]
# weather1 <- callAPI(stations, latitudes, longitudes, dates1)
# weather2 <- callAPI(stations, latitudes, longitudes, dates2)
# weather3 <- callAPI(stations, latitudes, longitudes, dates3)
# weather4 <- callAPI(stations, latitudes, longitudes, dates4)
weather5 <- callAPI(stations, latitudes, longitudes, dates5)
undebug(callAPI)
# weather1 <- callAPI(stations, latitudes, longitudes, dates1)
# weather2 <- callAPI(stations, latitudes, longitudes, dates2)
# weather3 <- callAPI(stations, latitudes, longitudes, dates3)
# weather4 <- callAPI(stations, latitudes, longitudes, dates4)
weather5 <- callAPI(stations, latitudes, longitudes, dates5)
weather6 <- callAPI(stations, latitudes, longitudes, dates6)
# weather1 <- callAPI(stations, latitudes, longitudes, dates1)
# weather2 <- callAPI(stations, latitudes, longitudes, dates2)
# weather3 <- callAPI(stations, latitudes, longitudes, dates3)
# weather4 <- callAPI(stations, latitudes, longitudes, dates4)
# weather5 <- callAPI(stations, latitudes, longitudes, dates5)
# weather6 <- callAPI(stations, latitudes, longitudes, dates6)
weather7 <- callAPI(stations, latitudes, longitudes, dates7)
# weather1 <- callAPI(stations, latitudes, longitudes, dates1)
# weather2 <- callAPI(stations, latitudes, longitudes, dates2)
# weather3 <- callAPI(stations, latitudes, longitudes, dates3)
# weather4 <- callAPI(stations, latitudes, longitudes, dates4)
# weather5 <- callAPI(stations, latitudes, longitudes, dates5)
# weather6 <- callAPI(stations, latitudes, longitudes, dates6)
# weather7 <- callAPI(stations, latitudes, longitudes, dates7)
weather8 <- callAPI(stations, latitudes, longitudes, dates8)
# weather1 <- callAPI(stations, latitudes, longitudes, dates1)
# weather2 <- callAPI(stations, latitudes, longitudes, dates2)
# weather3 <- callAPI(stations, latitudes, longitudes, dates3)
# weather4 <- callAPI(stations, latitudes, longitudes, dates4)
# weather5 <- callAPI(stations, latitudes, longitudes, dates5)
# weather6 <- callAPI(stations, latitudes, longitudes, dates6)
# weather7 <- callAPI(stations, latitudes, longitudes, dates7)
# weather8 <- callAPI(stations, latitudes, longitudes, dates8)
weather9 <- callAPI(stations, latitudes, longitudes, dates9)
# load function to call the DarkSky API for our dates and locations
source("callAPI.R")
# weather1 <- callAPI(stations, latitudes, longitudes, dates1)
# weather2 <- callAPI(stations, latitudes, longitudes, dates2)
# weather3 <- callAPI(stations, latitudes, longitudes, dates3)
# weather4 <- callAPI(stations, latitudes, longitudes, dates4)
# weather5 <- callAPI(stations, latitudes, longitudes, dates5)
# weather6 <- callAPI(stations, latitudes, longitudes, dates6)
# weather7 <- callAPI(stations, latitudes, longitudes, dates7)
# weather8 <- callAPI(stations, latitudes, longitudes, dates8)
weather9 <- callAPI(stations, latitudes, longitudes, dates9)
dates9 <- dates[201:228]
# weather1 <- callAPI(stations, latitudes, longitudes, dates1)
# weather2 <- callAPI(stations, latitudes, longitudes, dates2)
# weather3 <- callAPI(stations, latitudes, longitudes, dates3)
# weather4 <- callAPI(stations, latitudes, longitudes, dates4)
# weather5 <- callAPI(stations, latitudes, longitudes, dates5)
# weather6 <- callAPI(stations, latitudes, longitudes, dates6)
# weather7 <- callAPI(stations, latitudes, longitudes, dates7)
# weather8 <- callAPI(stations, latitudes, longitudes, dates8)
weather9 <- callAPI(stations, latitudes, longitudes, dates9)
View(weather9)
dates[229]
# weather1 <- callAPI(stations, latitudes, longitudes, dates1)
# weather2 <- callAPI(stations, latitudes, longitudes, dates2)
# weather3 <- callAPI(stations, latitudes, longitudes, dates3)
# weather4 <- callAPI(stations, latitudes, longitudes, dates4)
# weather5 <- callAPI(stations, latitudes, longitudes, dates5)
# weather6 <- callAPI(stations, latitudes, longitudes, dates6)
# weather7 <- callAPI(stations, latitudes, longitudes, dates7)
# weather8 <- callAPI(stations, latitudes, longitudes, dates8)
# weather9 <- callAPI(stations, latitudes, longitudes, dates9)
weather10 <- callAPI(stations, latitudes, longitudes, dates10)
dates10<- dates[229]
# weather1 <- callAPI(stations, latitudes, longitudes, dates1)
# weather2 <- callAPI(stations, latitudes, longitudes, dates2)
# weather3 <- callAPI(stations, latitudes, longitudes, dates3)
# weather4 <- callAPI(stations, latitudes, longitudes, dates4)
# weather5 <- callAPI(stations, latitudes, longitudes, dates5)
# weather6 <- callAPI(stations, latitudes, longitudes, dates6)
# weather7 <- callAPI(stations, latitudes, longitudes, dates7)
# weather8 <- callAPI(stations, latitudes, longitudes, dates8)
# weather9 <- callAPI(stations, latitudes, longitudes, dates9)
weather10 <- callAPI(stations, latitudes, longitudes, dates10)
debug(callAPI)
# weather1 <- callAPI(stations, latitudes, longitudes, dates1)
# weather2 <- callAPI(stations, latitudes, longitudes, dates2)
# weather3 <- callAPI(stations, latitudes, longitudes, dates3)
# weather4 <- callAPI(stations, latitudes, longitudes, dates4)
# weather5 <- callAPI(stations, latitudes, longitudes, dates5)
# weather6 <- callAPI(stations, latitudes, longitudes, dates6)
# weather7 <- callAPI(stations, latitudes, longitudes, dates7)
# weather8 <- callAPI(stations, latitudes, longitudes, dates8)
# weather9 <- callAPI(stations, latitudes, longitudes, dates9)
weather10 <- callAPI(stations, latitudes, longitudes, dates10)
View(hourly)
undebug(callAPI)
# load function to call the DarkSky API for our dates and locations
source("callAPI.R")
debug(callAPI)
# weather1 <- callAPI(stations, latitudes, longitudes, dates1)
# weather2 <- callAPI(stations, latitudes, longitudes, dates2)
# weather3 <- callAPI(stations, latitudes, longitudes, dates3)
# weather4 <- callAPI(stations, latitudes, longitudes, dates4)
# weather5 <- callAPI(stations, latitudes, longitudes, dates5)
# weather6 <- callAPI(stations, latitudes, longitudes, dates6)
# weather7 <- callAPI(stations, latitudes, longitudes, dates7)
# weather8 <- callAPI(stations, latitudes, longitudes, dates8)
# weather9 <- callAPI(stations, latitudes, longitudes, dates9)
weather10 <- callAPI(stations, latitudes, longitudes, dates10)
callAPI <- function(stations, lats, lons, dates) {
# function to call API to get data for specified locations and times
# Package manager
if(!"pacman" %in% installed.packages()[,"Package"]) install.packages("pacman")
pacman::p_load(darksky, dplyr)
# create empty frame
weather <- data.frame()
for (i in 1:length(stations)) {
for (j in 1:length(dates)) {
# for each location (i), get the weather for each date (j),
hourly <- get_forecast_for(lats[i], lons[i], dates[j], add_headers=TRUE)$hourly
# replicate the location name so we have 1/hour for the date(j)
station <- rep(stations[i], nrow(hourly))
# combine the name with the data
addName <- cbind(station,hourly)
# add rows to overall data, matching by column name
weather <- union_all(weather,addName)
# remove the old data
rm(names, hourly, station, addName)
} # end location for
} # end date for
return(weather)
} # end function
undebug(callAPI)
# weather1 <- callAPI(stations, latitudes, longitudes, dates1)
# weather2 <- callAPI(stations, latitudes, longitudes, dates2)
# weather3 <- callAPI(stations, latitudes, longitudes, dates3)
# weather4 <- callAPI(stations, latitudes, longitudes, dates4)
# weather5 <- callAPI(stations, latitudes, longitudes, dates5)
# weather6 <- callAPI(stations, latitudes, longitudes, dates6)
# weather7 <- callAPI(stations, latitudes, longitudes, dates7)
# weather8 <- callAPI(stations, latitudes, longitudes, dates8)
# weather9 <- callAPI(stations, latitudes, longitudes, dates9)
weather10 <- callAPI(stations, latitudes, longitudes, dates10)
callAPI <- function(stations, lats, lons, dates) {
# function to call API to get data for specified locations and times
# Package manager
if(!"pacman" %in% installed.packages()[,"Package"]) install.packages("pacman")
pacman::p_load(darksky, dplyr)
# create empty frame
weather <- data.frame()
for (i in 1:length(stations)) {
for (j in 1:length(dates)) {
# for each location (i), get the weather for each date (j),
hourly <- get_forecast_for(lats[i], lons[i], dates[j], add_headers=TRUE)$hourly
# replicate the location name so we have 1/hour for the date(j)
station <- rep(stations[i], nrow(hourly))
# combine the name with the data
addName <- cbind(station,hourly)
# add rows to overall data, matching by column name
weather <- union_all(weather,addName)
# remove the old data
rm(hourly, station, addName)
} # end location for
} # end date for
return(weather)
} # end function
# weather1 <- callAPI(stations, latitudes, longitudes, dates1)
# weather2 <- callAPI(stations, latitudes, longitudes, dates2)
# weather3 <- callAPI(stations, latitudes, longitudes, dates3)
# weather4 <- callAPI(stations, latitudes, longitudes, dates4)
# weather5 <- callAPI(stations, latitudes, longitudes, dates5)
# weather6 <- callAPI(stations, latitudes, longitudes, dates6)
# weather7 <- callAPI(stations, latitudes, longitudes, dates7)
# weather8 <- callAPI(stations, latitudes, longitudes, dates8)
# weather9 <- callAPI(stations, latitudes, longitudes, dates9)
weather10 <- callAPI(stations, latitudes, longitudes, dates10)
View(weather10)
weather1 <- callAPI(stations, latitudes, longitudes, dates1)
weather2 <- callAPI(stations, latitudes, longitudes, dates2)
weather3 <- callAPI(stations, latitudes, longitudes, dates3)
weather4 <- callAPI(stations, latitudes, longitudes, dates4)
weather5 <- callAPI(stations, latitudes, longitudes, dates5)
weather6 <- callAPI(stations, latitudes, longitudes, dates6)
# join all of the weather subsets together
weather <- union_all(weather1, weather2,)
weather_2 <- union_all(weather1, weather2, weather3)
# join all of the weather subsets together
weather <- union_all(weather1, weather2) %>%
union_all(weather3) %>%
union_all(weather4)
# join all of the weather subsets together
weather <- union_all(weather1, weather2) %>%
union_all(weather3) %>%
union_all(weather4) %>%
union_all(weather5) %>%
union_all(weather6)
# convert relevant columns to factors
weather$names <- factor(weather$names)
weather$time <- factor(weather$time)
weather$summary <- factor(weather$summary)
weather$icon <- factor(weather$icon)
weather$precipType <- factor(weather$precipType)
# save to file
write.xlsx2(weather, paste(location,"weather.xlsx", sep="/"), col.names = T)
# save to file
write.xlsx2(weather, paste(location,"weather.xlsx", sep="/"), col.names = T)
# save to file
write.xlsx2(weather, paste(location,"weather.xlsx", sep="/"), col.names = T, append=F)
setwd("~/Documents/_SCHOOL/_Drexel/STAT 642 - Data Mining/Assignments/Will-I-Be-Late-")
# save to file
write.xlsx2(weather, "weather.xlsx", col.names = T, append=F)
setwd("~/Documents/_SCHOOL/_Drexel/STAT 642 - Data Mining/Assignments/Will-I-Be-Late-/data")
location <- "~/Documents/_SCHOOL/_Drexel/STAT 642 - Data Mining/Assignments/Will-I-Be-Late-/data"
# save to file
write.xlsx2(weather, paste(location,"weather.xlsx", sep="/"), col.names = T, append=F)
setwd("~/Documents/_SCHOOL/_Drexel/STAT 642 - Data Mining/Assignments/Will-I-Be-Late-/data")
setwd("~/Documents/_SCHOOL/_Drexel/STAT 642 - Data Mining/Assignments/Will-I-Be-Late-/data")
# save to file
write.xlsx2(weather, "weather.xlsx", col.names = T, append=F)
weather.old <- weather
location <- "~/Documents/_SCHOOL/_Drexel/STAT 642 - Data Mining/Assignments/Will-I-Be-Late-/data"
# source: DarkSky API - see "getWeather.R"
weather <- read.xlsx(paste(location,"weather.xlsx",sep="/"))
# source: DarkSky API - see "getWeather.R"
weather <- read.xlsx(paste(location,"weather.xlsx",sep="/"),sheetIndex=1)
View(weather)
# convert relevant columns to factors
weather <- weather[-1,]
# convert relevant columns to factors
weather <- select(weather, -NAs)
View(weather)
# convert relevant columns to factors
weather <- select(weather, -NA.)
weather$names <- factor(weather$names)
weather$time <- factor(weather$time)
weather$names <- factor(weather$names)
View(weather)
View(weather.old)
# convert relevant columns to factors
weather <- select(weather, -NA.)
weather$station <- factor(weather$station)
weather$time <- factor(weather$time)
weather$summary <- factor(weather$summary)
weather$icon <- factor(weather$icon)
weather$precipType <- factor(weather$precipType)
summary(weather)
